name: Release Helm Charts

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read
  attestations: write
  id-token: write
  security-events: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'v3.7.1'

      - name: Package Helm charts
        run: |
          cd charts
          mkdir -p ../packages
          for chart in */Chart.yaml; do
            chart_dir=$(dirname "$chart")
            helm package "$chart_dir" --destination ../packages
          done

      - name: Publish Helm charts to GitHub Packages
        env:
          HELM_EXPERIMENTAL_OCI: 1
          HELM_REGISTRY_CONFIG: /home/runner/.config/helm/registry.json
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login -u ${{ github.actor }} --password-stdin ghcr.io
          cd packages
          for package in *.tgz; do
            helm push "$package" oci://ghcr.io/${{ github.repository_owner }}/charts
          done

      - name: Create GitHub Release for each Helm chart
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd packages
          for package in *.tgz; do
            chart_name=$(helm show chart "$package" | grep '^name:' | awk '{print $2}')
            release_version=$(helm show chart "$package" | grep '^version:' | awk '{print $2}')
            release_name="${chart_name}-${release_version}"
            gh release create "$release_name" "$package" --title "$chart_name" --notes "Release of $chart_name version $release_version"
          done
